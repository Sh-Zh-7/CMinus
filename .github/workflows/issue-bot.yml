name: CMinus CI about issue bot.

on:
  issues:
    types: [opened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Set up Antlr
      run: |
        wget https://www.antlr.org/download/antlr-4.9.2-complete.jar
    - name: Generate source files with Antlr
      run: |
        java -jar antlr-4.9.2-complete.jar \
        -o src/main/java/io/github/cminus \
        -package io.github.cminus \
        -Dlanguage=Java \
        -encoding utf-8 \
        -listener  -visitor \
        -lib src/main/resources src/main/resources/CMinus.g4    
    - name: Build with Maven
      run: mvn package -Dmaven.test.skip=true
    - name: Github issue bot
      uses: actions/github-script@v4.0.2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const cp = require('child_process');
          // Title must be started with [test] prefix.
          if (/\[test\]/gm.test(" ${{ github.event.issue.title }} ")) {
            github.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            }).then(res => {
              // Get code in pair of ``` or not
              const matchGroup = res.data.body.match(/```\r\n([\s\S]*)\r\n```/);
              if (matchGroup && matchGroup[1]) {
                const code = matchGroup[1];
              } else {
                const code = res.data.body;
              }
              fs.writeFileSync('input.txt', code);
              cp.exec('java -jar target/cminus-1.0-SNAPSHOT-jar-with-dependencies.jar input.txt', (err, stdout, stderr) => {
                  // Get output in stdout or stderr
                  if (stdout) {
                    const outputPrefix = "Compile successfully. The result is:\n";
                    const outputContent = "```\n" + stdout + "\n```";
                    const output = outputPrefix + outputContent;
                  } else {
                    const outputPrefix = "Compile failed. The error(s) is(are):\n";
                    const outputContent = "```\n" + stderr + "\n```";
                    const output = outputPrefix + outputContent;
                  }
                  github.issues.createComment({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: context.issue.number,
                      body: output,
                  }).then((res) => {
                      github.issues.lock({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: context.issue.number,
                          lock_reason: "off-topic",
                      });
                  });
              });
            }) 
          }          
